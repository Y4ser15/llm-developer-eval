version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - OLLAMA_BASE_URL=http://ollama:11434
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
    volumes:
      - ./results:/app/results
      - ./datasets:/app/datasets
    depends_on:
      - ollama
    networks:
      - llm-eval-network
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
    networks:
      - llm-eval-network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - llm-eval-network
    restart: unless-stopped

  # Optional: PostgreSQL for persistent storage (future enhancement)
  postgres:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=llm_eval
      - POSTGRES_USER=llm_eval
      - POSTGRES_PASSWORD=llm_eval_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - llm-eval-network
    restart: unless-stopped

volumes:
  ollama_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  llm-eval-network:
    driver: bridge